server:
  port: 8082

logging:
  level:
    ROOT: INFO

#actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      enabled: true
      show-details: always
    metrics:
      enabled: true
    logfile:
      enabled: true
    prometheus:
      enabled: true
    busrefresh:
      enabled: true
    hystrix:
      stream:
        enabled: true
  info:
    build:
      enabled: true
    env:
      enabled: true
    git:
      mode: "full"

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 3000

spring:
  application:
    name: client-service
  banner:
    location: banner
  cloud:
    config:
      uri: ${CONFIG_URI:http://config:8080}
      fail-fast: true
      retry:
        max-attempts: 20
        max-interval: 15000
        initial-interval: 10000
    bus:
      refresh:
        enabled: true
      env:
        enabled: true
  kafka:
    bootstrap-servers: ${KAFKA_ADDR:http://kafka-server:9092}
  config:
    import: optional:configserver:${CONFIG_URI:http://configuration-server:8080}
  main:
    allow-bean-definition-overriding: true
    web-application-type: reactive
  sleuth:
    sampler:
      probability: 100
  zipkin:
    base-url: ${ZIPKIN_URI:http://zipkin-server:9411/}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URI:http://eureka-discovery-server:8761/eureka}
      register-with-eureka: true
      fetch-registry: true
      eviction-interval-timer-in-ms: 15000
  instance:
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true

db:
  database: db_client_data
  schema: db_client_data
  application-name: client-service
  pool:
    enabled: true
    initial-size: 6
    max-size: 6
    max-idle-time: 301m
    max-acquire-time: 2m
    max-life-time: 301m

api:
  path:
    additional: /client-service
    clients: /clients
    client-by-id: /clients/{clientId}
    client-contacts: /clients/{clientId}/contacts
    add-client: /clients
    change-client: /clients/{clientId}
    add-contact-to-client: /clients/{clientId}/contacts
    delete-client: /clients/{clientId}
    delete-client-contact: /clients/{clientId}/contacts/{contactId}

encrypt:
  key: mySecretKey
